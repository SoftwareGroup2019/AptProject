name: 'Users API'
description: |-

  Managing all roles API Resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users/showall
    metadata:
      groupName: 'Users API'
      groupDescription: |-

        Managing all roles API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'fetch all users'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users/create
    metadata:
      groupName: 'Users API'
      groupDescription: |-

        Managing all roles API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Create User Request'
      description: 'you can create any users with attaching role and group'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "roles": [
               {
               "id": "1",
                "rolename": "SuperAdmin"
               },
              {
             "id": "2",
            "rolename": "Group"
           }
          ],
          "group": [
            {
           "id": "1",
          "groupname": "Lalav"
          },
          {
          "id": "2",
          "groupname": "Pavilon"
          }
          ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/store
    metadata:
      groupName: 'Users API'
      groupDescription: |-

        Managing all roles API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'store user request'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of users.'
        required: true
        example: ahmed
        type: string
        custom: []
      email:
        name: email
        description: 'The email of users.'
        required: true
        example: ahmed@app.com
        type: string
        custom: []
      password:
        name: password
        description: 'The password of users.'
        required: true
        example: '123123'
        type: string
        custom: []
      role_id:
        name: role_id
        description: 'The role of users.'
        required: true
        example: '1'
        type: string
        custom: []
      group_id:
        name: group_id
        description: 'The group name of users.'
        required: true
        example: '1'
        type: string
        custom: []
    cleanBodyParameters:
      name: ahmed
      email: ahmed@app.com
      password: '123123'
      role_id: '1'
      group_id: '1'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"","name":"Monique Upton","email":"dominique.nader@example.net","role":null,"group":null}}'
        headers: []
        description: '0'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/edit/{id}'
    metadata:
      groupName: 'Users API'
      groupDescription: |-

        Managing all roles API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'edit user request'
      description: 'you can get user by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"","name":"Vena DuBuque MD","email":"adonnelly@example.com","role":null,"group":null}}'
        headers: []
        description: '0'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/users/update/{id}'
    metadata:
      groupName: 'Users API'
      groupDescription: |-

        Managing all roles API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Request'
      description: 'you can update any users by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The updated name of users.'
        required: true
        example: ahmed
        type: string
        custom: []
      email:
        name: email
        description: 'The updated email of users.'
        required: true
        example: ahmed@app.com
        type: string
        custom: []
      password:
        name: password
        description: 'The updated password of users.'
        required: true
        example: '123123'
        type: string
        custom: []
      role_id:
        name: role_id
        description: 'The updated role of users.'
        required: true
        example: '1'
        type: string
        custom: []
      group_id:
        name: group_id
        description: 'The updated group name of users.'
        required: true
        example: '1'
        type: string
        custom: []
    cleanBodyParameters:
      name: ahmed
      email: ahmed@app.com
      password: '123123'
      role_id: '1'
      group_id: '1'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "User Updated Succeesfully"
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/delete/{id}'
    metadata:
      groupName: 'Users API'
      groupDescription: |-

        Managing all roles API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Users Request'
      description: 'you can Delete any users by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "User Deleted Succeesfully"
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
