name: 'Groups API'
description: |-

  Managing all groups API Resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/groups/showall
    metadata:
      groupName: 'Groups API'
      groupDescription: |-

        Managing all groups API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'fetch all groups'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[[],[]]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/groups/store
    metadata:
      groupName: 'Groups API'
      groupDescription: |-

        Managing all groups API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'store group request'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      groupname:
        name: groupname
        description: 'The name of users group.'
        required: true
        example: Lalav
        type: string
        custom: []
    cleanBodyParameters:
      groupname: Lalav
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers: []
        description: '0'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/groups/edit/{id}'
    metadata:
      groupName: 'Groups API'
      groupDescription: |-

        Managing all groups API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'edit group request'
      description: 'you can get groups by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the Group.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers: []
        description: '0'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/groups/update/{id}'
    metadata:
      groupName: 'Groups API'
      groupDescription: |-

        Managing all groups API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Group Request'
      description: 'you can update any group by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      groupname:
        name: groupname
        description: 'The updated name of users group.'
        required: true
        example: testgroup
        type: string
        custom: []
    cleanBodyParameters:
      groupname: testgroup
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Group Updated Succeesfully"
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/groups/delete/{id}'
    metadata:
      groupName: 'Groups API'
      groupDescription: |-

        Managing all groups API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Group Request'
      description: 'you can Delete any groups by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Group Deleted Succeesfully"
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
