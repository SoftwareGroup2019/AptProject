## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Apartments API'
description: |-

  Managing all apartments API Resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/apt/showall
    metadata:
      groupName: 'Apartments API'
      groupDescription: |-

        Managing all apartments API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'fetch all apartments'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/apt/create
    metadata:
      groupName: 'Apartments API'
      groupDescription: |-

        Managing all apartments API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Apartment Request'
      description: 'you can create any apartment with attaching group'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"1","groupname":"Lalav"}}'
        headers: []
        description: '0'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/apt/store
    metadata:
      groupName: 'Apartments API'
      groupDescription: |-

        Managing all apartments API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'store apartment request'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      aptname:
        name: aptname
        description: 'The name of apartment.'
        required: true
        example: A1-01
        type: string
        custom: []
      password:
        name: password
        description: 'The password of apartment.'
        required: true
        example: '123123'
        type: string
        custom: []
      enableads:
        name: enableads
        description: 'The enabling advertisment of apartment.'
        required: true
        example: true
        type: boolean
        custom: []
      enableservice:
        name: enableservice
        description: 'The enabling service of apartment.'
        required: true
        example: true
        type: boolean
        custom: []
      group_id:
        name: group_id
        description: 'The group of apartment ex: Lalav.'
        required: true
        example: '1'
        type: string
        custom: []
      passcode:
        name: passcode
        description: 'The code of apartment ordering.'
        required: true
        example: '0000'
        type: string
        custom: []
    cleanBodyParameters:
      aptname: A1-01
      password: '123123'
      enableads: true
      enableservice: true
      group_id: '1'
      passcode: '0000'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"","aptname":null,"password":null,"enableads":null,"enableservice":null,"passcode":null,"group_id":null}}'
        headers: []
        description: '0'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/apt/edit/{id}'
    metadata:
      groupName: 'Apartments API'
      groupDescription: |-

        Managing all apartments API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'edit apartmemt request'
      description: 'you can get apartment by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the apartment.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"","aptname":null,"password":null,"enableads":null,"enableservice":null,"passcode":null,"group_id":null}}'
        headers: []
        description: '0'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/apt/update/{id}'
    metadata:
      groupName: 'Apartments API'
      groupDescription: |-

        Managing all apartments API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Apartment Request'
      description: 'you can update any apartment by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the apartment.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      aptname:
        name: aptname
        description: 'The name of apartment.'
        required: true
        example: A1-01
        type: string
        custom: []
      password:
        name: password
        description: 'The password of apartment.'
        required: true
        example: '123123'
        type: string
        custom: []
      enableads:
        name: enableads
        description: 'The enabling advertisment of apartment.'
        required: true
        example: true
        type: boolean
        custom: []
      enableservice:
        name: enableservice
        description: 'The enabling service of apartment.'
        required: true
        example: true
        type: boolean
        custom: []
      group_id:
        name: group_id
        description: 'The group of apartment ex: Lalav.'
        required: true
        example: '1'
        type: string
        custom: []
      passcode:
        name: passcode
        description: 'The code of apartment ordering.'
        required: true
        example: '0000'
        type: string
        custom: []
    cleanBodyParameters:
      aptname: A1-01
      password: '123123'
      enableads: true
      enableservice: true
      group_id: '1'
      passcode: '0000'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Apartment Updated Succeesfully"
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/apt/delete/{id}'
    metadata:
      groupName: 'Apartments API'
      groupDescription: |-

        Managing all apartments API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Apartment Request'
      description: 'you can Delete any apartment by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the apartment.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Apartment Deleted Succeesfully"
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
