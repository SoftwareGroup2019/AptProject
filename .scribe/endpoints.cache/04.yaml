## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Services API'
description: |-

  Managing all services API Resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/service/showall
    metadata:
      groupName: 'Services API'
      groupDescription: |-

        Managing all services API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'fetch all services'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/service/create
    metadata:
      groupName: 'Services API'
      groupDescription: |-

        Managing all services API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Service Request'
      description: 'you can create any services with attaching group'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"1","groupname":"Lalav"}}'
        headers: []
        description: '0'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/service/store
    metadata:
      groupName: 'Services API'
      groupDescription: |-

        Managing all services API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'store service request'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      servicename:
        name: servicename
        description: 'The name of service.'
        required: true
        example: Laundry
        type: string
        custom: []
      title:
        name: title
        description: 'The title of service.'
        required: true
        example: 'Golden Laundry Co.'
        type: string
        custom: []
      username:
        name: username
        description: 'The username of service.'
        required: true
        example: 'Sardar Karkuki'
        type: string
        custom: []
      email:
        name: email
        description: 'The email of service.'
        required: true
        example: sardar@app.com
        type: string
        custom: []
      password:
        name: password
        description: 'The password of service.'
        required: true
        example: '123123'
        type: string
        custom: []
      group_id:
        name: group_id
        description: 'The group of service ex: Lalav.'
        required: true
        example: '1'
        type: string
        custom: []
      status:
        name: status
        description: 'The status of service.'
        required: true
        example: notAvailable
        type: string
        custom: []
      from:
        name: from
        description: 'The from of service which its start time of available.'
        required: true
        example: 8AM
        type: string
        custom: []
      to:
        name: to
        description: 'The to of service which its end time of available.'
        required: true
        example: 4PM
        type: string
        custom: []
    cleanBodyParameters:
      servicename: Laundry
      title: 'Golden Laundry Co.'
      username: 'Sardar Karkuki'
      email: sardar@app.com
      password: '123123'
      group_id: '1'
      status: notAvailable
      from: 8AM
      to: 4PM
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"","servicename":null,"title":null,"username":null,"email":null,"password":null,"status":null,"from":null,"to":null,"group_id":null}}'
        headers: []
        description: '0'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/service/edit/{id}'
    metadata:
      groupName: 'Services API'
      groupDescription: |-

        Managing all services API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'edit service request'
      description: 'you can get service by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"","servicename":null,"title":null,"username":null,"email":null,"password":null,"status":null,"from":null,"to":null,"group_id":null}}'
        headers: []
        description: '0'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/service/update/{id}'
    metadata:
      groupName: 'Services API'
      groupDescription: |-

        Managing all services API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Service Request'
      description: 'you can update any service by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      servicename:
        name: servicename
        description: 'The name of service.'
        required: true
        example: Laundry
        type: string
        custom: []
      title:
        name: title
        description: 'The title of service.'
        required: true
        example: 'Golden Laundry Co.'
        type: string
        custom: []
      username:
        name: username
        description: 'The username of service.'
        required: true
        example: 'Sardar Karkuki'
        type: string
        custom: []
      email:
        name: email
        description: 'The email of service.'
        required: true
        example: sardar@app.com
        type: string
        custom: []
      password:
        name: password
        description: 'The password of service.'
        required: true
        example: '123123'
        type: string
        custom: []
      group_id:
        name: group_id
        description: 'The group of service ex: Lalav.'
        required: true
        example: '1'
        type: string
        custom: []
      statux:
        name: statux
        description: 'The status of service.'
        required: true
        example: notAvailable
        type: string
        custom: []
      from:
        name: from
        description: 'The from of service which its start time of available.'
        required: true
        example: 8AM
        type: string
        custom: []
      to:
        name: to
        description: 'The to of service which its end time of available.'
        required: true
        example: 4PM
        type: string
        custom: []
    cleanBodyParameters:
      servicename: Laundry
      title: 'Golden Laundry Co.'
      username: 'Sardar Karkuki'
      email: sardar@app.com
      password: '123123'
      group_id: '1'
      statux: notAvailable
      from: 8AM
      to: 4PM
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Service Updated Succeesfully"
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/service/delete/{id}'
    metadata:
      groupName: 'Services API'
      groupDescription: |-

        Managing all services API Resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Service Request'
      description: 'you can Delete any service by ID'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Service Deleted Succeesfully"
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
